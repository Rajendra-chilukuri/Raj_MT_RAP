managed  implementation in class zbp_mt_ch_travel unique;
strict ( 2 );
with draft;
define behavior for ZMT_CH_TRAVEL alias Travel
implementation in class zbp_mt_ch_travel unique
persistent table /dmo/travel_m
//add the draft table name
draft table zmt_ab_d_travel
lock master
total etag LastChangedAt
authorization master ( instance )
etag master LastChangedAt
early numbering
with additional save
{
  create( authorization : global, precheck );
  update( precheck );
  delete;
  draft action Edit;
  draft determine action Prepare{
   validation validateHeaderData ;
 }

  draft action Activate;
  draft action Discard;
  draft action Resume;

  field ( readonly ) TravelId;
  field ( mandatory ) BeginDate, EndDate, AgencyId, CustomerId;
  association _Booking { create ( features : instance ); with draft; }
  association _Attachments{create;with draft; }
  factory action copyTravel [1];
  action (features : instance) acceptTravel result[1] $self;
  action (features : instance) rejectTravel result[1] $self;

  internal action reCalcTotalPrice;
  validation validateHeaderData on save { create; field CustomerId, BeginDate, EndDate; }
  side effects { field BookingFee affects field TotalPrice; }
  //Define determination to execute the code when
  //booking fee or curr code changes so we calc total price
  determination calculateTotalPrice on modify
  { create; field BookingFee, CurrencyCode; }

  mapping for /dmo/travel_m
    {
      TravelId      = travel_id;
      AgencyId      = agency_id;
      CustomerId    = customer_id;
      BeginDate     = begin_date;
      EndDate       = end_date;
      BookingFee    = booking_fee;
      TotalPrice    = total_price;
      CurrencyCode  = currency_code;
      LastChangedAt = last_changed_at;
      LastChangedBy = last_changed_by;
      CreatedAt     = created_at;
      CreatedBy     = created_by;
      OverallStatus = overall_status;
      Description   = description;
    }


}

define behavior for ZMT_CH_BOOKING alias booking
implementation in class zbp_mt_ch_booking unique
persistent table /dmo/booking_m
//add the draft table name
draft table zmt_ab_d_booking

lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
early numbering
{
  update;
  delete;
  field ( readonly ) TravelId, BookingId;
  field ( mandatory ) CarrierId, ConnectionId, FlightDate;
  association _Travel;
  association _BookingSupplement { create; with draft; }
  mapping for /dmo/booking_m
    {
      TravelId      = travel_id;
      BookingId     = booking_id;
      CarrierId     = carrier_id;
      ConnectionId  = connection_id;
      BookingStatus = booking_status;
      BookingDate   = booking_date;
      CurrencyCode  = currency_code;
      CustomerId    = customer_id;
      FlightDate    = flight_date;
      FlightPrice   = flight_price;
      LastChangedAt = last_changed_at;
    }

}

define behavior for ZMT_CH_BOOKSUPPL alias BookSuppl
persistent table /dmo/booksuppl_m
//add the draft table name
draft table zmt_ab_d_bksuppl

lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
early numbering
{
  update;
  delete;
  field ( readonly ) TravelId, BookingId;
  field ( mandatory ) BookingSupplementId;
  association _Travel;
  association _Booking;
  mapping for /dmo/booksuppl_m
    {
      TravelId            = travel_id;
      BookingId           = booking_id;
      SupplementId        = supplement_id;
      BookingSupplementId = booking_supplement_id;
      CurrencyCode        = currency_code;
      Price               = price;
    }

}
//BDefinition for booking entity
define behavior for ZMT_CH_M_ATTACH alias Attachment
implementation in class zbp_mt_ch_attach unique
persistent table zmt_ch_attach
//add the draft table name
draft table zmt_ch_d_attach
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
{
 //Only update and delete of booking is allowed
 update;
 delete;
 //make sure that an edit on booking should not change travel
 field (numbering : managed) id;
 field ( readonly ) TravelId, id;
 association _Travel;
 mapping for zmt_ch_attach{
   TravelId = travel_id;
   id = id;
   Attachment = attachment;
   Filename = filename;
   Filetype = filetype;
   LastChangedAt = last_changed_at;
   LocalCreatedAt = local_created_at;
   LocalCreatedBy = local_created_by;
   LocalLastChangedAt = local_last_changed_at;
   LocalLastChangedBy = local_last_changed_by;
   memo = memo;
 }
}